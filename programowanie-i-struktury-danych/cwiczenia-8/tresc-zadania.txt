
    Napisać bibliotekę "obsługującą" sklep, tj. zawierającą:
        typ strukturalny Towar o polach kod_towaru (liczba całkowita dodatnia) i ilosc (liczba rzeczywista nieujemna),
        typ Spis_towarow będący dynamiczną listą łączoną o elementach przechowujących towar i wskaźnik na następny element spisu,
        funkcję wypisującą zawartość spisu,
        funkcję wstaw wstawiająca do spisu towar podany jako parametr tak aby spis był posortowany niemalejąco według kodu towarów (zakładamy, że spis do którego wstawiamy jest już uporządkowany w taki sposób)
        funkcję wstaw_roznowartosciowo dodającą do spisu towarów element odpowiadający towarowi podanemu jako parametr tak, aby uzyskać spis różnowartościowy i uporządkowany rosnąco względem kodu towarów. Różnowartościowość spisu uzyskujemy następująco: jeśli towar podany jako parametr występuje już w spisie, to zamiast wstawiania do spisu kolejnego elementu modyfikujemy pole ilosc_towaru umieszczonego w spisie, zwiększając je o ilość podaną w parametrze funcji;
        funkcję odejmij_ze_spisu, modyfikującą spis towarów przez odjęcie od niego zawartości spisu towarów podanego jako parametr. [Jeśli przez S1 będziemy rozumieć "dany" (modyfikowany) spis, a przez S2 - spis podany jako parametr, to przez odjęcie zawartości S2 od zawartości S1 rozumiemy następujące działanie: jeśli towar T występujący w spisie S2 występuje też w S1, to ilość towaru T w S1 jest pomniejszana o ilość towaru T w spisie S2. Jeżeli po tym zmniejszeniu ilość towaru T byłaby niedodatnia, to element przechowujący dane towaru T jest usuwany ze spisu S1. Towary występujące tylko w spisie S2 nie powodują żadnych zmian w S1.]
        funkcję skompresuj modyfikującą spis w następujący sposób: jeśli jest on nieróżnowartościowy (np. utworzony za pomocą funkcji wstaw), to wszystkie sąsiednie elementy przechowujące towar o tym samym identyfikatorze są zastępowane pojedynczym elementem przechowującym towar o tym identyfikatorze i ilości równej sumie ilości towarów w zastępowanych elementach, 
    oraz program testujący działanie biblioteki
    Napisać bibliotekę "obsługującą" system plików, tj. udostępniającą:
        typ strukturalny Plik o polach nazwa (ciąg znaków), rozmiar (liczba całkowita nieujemna) i czy_ukryty (wartość logiczna określająca atrybut pliku, domyślnie fałsz)
        typ Katalog odpowiadający liście dynamicznej o elementach przechowujących dane pliu (typ Plik) i wskaźnik na następny element w katalogu,
        funkcję dodaj_plik dodającą do katalogu plik podany jak parametr tak aby zawartość katalogu była posortowana rosnąco według nazwy (zakładając że jest ona posortowana w ten sposób przed dodaniem nowego elementu), przy czym jeśli katalog zawiera już plik o podanej nazwie funkcja powinna zgłosić wyjątek,
        funkcję kopiuj, dodającą (kopiującą) do katalogu pliki z katalogu K podanego jako parametr, zachowując przy tym uporządkowanie plików w katalogu "docelowym" (po zakończeniu działania funkcji pliki w tym katalogu mają nadal być posortowane wedłg nazwy). Kopiowanie ma być wykonane "z nadpisywaniem" - jeśli w katalogu docelowym istniał już plik o danej nazwie, to jego rozmiar i atrybut mają zostać zmienione na wartości odpowiadające wartościom dla pliku z katalogu K. Funkcja ma pozostawić katalog K bez zmiany, rozwiązanie zadania przy uzyciu kopiowania danych z katalogu do tablicy jest niedozwolone; 
    oraz program testujący działanie biblioteki 